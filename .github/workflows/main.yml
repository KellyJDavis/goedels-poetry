name: Main

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Show submodule status
        run: git submodule status

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Set up the environment
        uses: ./.github/actions/setup-python-env

      - name: Run checks
        run: make check

  tests-and-type-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
      fail-fast: false
    defaults:
      run:
        shell: bash
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Show submodule status
        run: git submodule status

      - name: Set up the environment
        uses: ./.github/actions/setup-python-env
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run tests
        run: uv run python -m pytest tests --cov --cov-config=pyproject.toml --cov-report=xml

      - name: Check typing
        run: uv run mypy


      - name: Upload coverage reports to Codecov with GitHub Action on Python 3.11
        uses: codecov/codecov-action@v4
        if: ${{ matrix.python-version == '3.11' }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  integration-tests:
    runs-on: ubuntu-latest
    env:
      BASE: ${{ github.workspace }}
      LEAN_SERVER_LEAN_VERSION: v4.15.0
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Show submodule status
        run: git submodule status

      - name: Set up the environment
        uses: ./.github/actions/setup-python-env

      - name: Generate prisma types
        run: uv run prisma generate --schema=kimina-lean-server/prisma/schema.prisma

      - name: Restore Lean cache
        id: lean-cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.elan
            kimina-lean-server/repl
            kimina-lean-server/mathlib4
          key: ${{ runner.os }}-lean-${{ env.LEAN_SERVER_LEAN_VERSION }}
          restore-keys: ${{ runner.os }}-lean-

      - name: Run Lean setup
        if: steps.lean-cache.outputs.cache-hit != 'true'
        run: |
          cd kimina-lean-server
          bash setup.sh

      - name: Add lake binary to PATH
        run: echo "$HOME/.elan/bin" >> $GITHUB_PATH

      - name: Verify lake
        run: which lake

      - name: Run integration tests
        run: uv run python -m pytest tests/test_kimina_agents.py -v --cov --cov-config=pyproject.toml --cov-append --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  check-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Show submodule status
        run: git submodule status

      - name: Set up the environment
        uses: ./.github/actions/setup-python-env

      - name: Check if documentation can be built
        run: uv run mkdocs build -s
